name: Build and Test Native Messaging Host

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust_toolchain: [stable]
        experimental: [false]
        include:
          - os: ubuntu-latest
            rust_toolchain: nightly
            experimental: true
          - os: macos-latest
            rust_toolchain: nightly
            experimental: true
          - os: windows-latest
            rust_toolchain: nightly
            experimental: true

    steps:
      - uses: actions/checkout@v2
      - name: Git Commit Hash
        id: git_commit
        run: |
          echo "::set-output name=hash::$(git rev-parse HEAD)"

      - name: Cancel Previous Runs
        if: contains(matrix.os, 'ubuntu')
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Install Rust Toolchain
        id: rust_toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          default: true
          override: true
          components: rustfmt, clippy

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: build-${{ runner.os }}-rustc-${{ steps.rust_toolchain.outputs.rustc_hash }}-lock-${{ hashFiles('Cargo.lock') }}-git-${{ steps.git_commit.outputs.hash }}
          restore-keys: |
            build-${{ runner.os }}-rustc-${{ steps.rust_toolchain.outputs.rustc_hash }}-lock-${{ hashFiles('Cargo.lock') }}-
            build-${{ runner.os }}-rustc-${{ steps.rust_toolchain.outputs.rustc_hash }}-
            build-${{ runner.os }}-

      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.rust_toolchain }}-native-messaging-host
          retention-days: 60
          path: |
            target/release/external-editor-revived
            target/release/external-editor-revived.exe

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
